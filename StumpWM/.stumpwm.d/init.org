#+PROPERTY: header-args :tangle yes
#+TITLE: My configuration for The Stump Window Manager
#+AUTHOR: Vicente Collares

If you want to tangle this file from the command line run:
#+BEGIN_SRC sh :tangle no
  emacs --batch --eval "(require 'org)" --eval '(org-babel-tangle-file "~/.stumpwm.d/init.org")'
#+end_src

* Setup
#+BEGIN_SRC sh :tangle setup.sh :shebang "#!/bin/bash"
  emacs --batch --eval "(require 'org)" --eval '(org-babel-tangle-file "~/.stumpwm.d/init.org")'
#+end_src
* Basics
** Use Slime to get an REPL
#+BEGIN_SRC lisp
  (ql:quickload :swank)

  (defcommand swank () ()
	      "This function starts the Swank server and tells the user how to connect to it."
	      (swank:create-server :port 4005
				   :style swank:*communication-style*
				   :dont-close t)
	      (stumpwm:echo-string (stumpwm:current-screen)
				   "Starting swank. M-x slime-connect RET RET, then (in-package stumpwm)."))

  (defcommand swank-end () ()
	      "This function ends the Swank server and tells the user."
	      (swank:stop-server 4005)
	      (stumpwm:echo-string (stumpwm:current-screen)
				   "Killing swank"))

  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "C-z") "swank")
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "M-z") "swank-end")
#+end_src
** Setting a background using Nitrogen
#+BEGIN_SRC lisp
  (stumpwm:run-commands "exec nitrogen --restore")
#+end_src
** Enable the mode-line
#+BEGIN_SRC lisp
  (stumpwm:toggle-mode-line (stumpwm:current-screen)
			  (stumpwm:current-head))
#+end_src
* Key Bindings
** Volume control using media keys
#+BEGIN_SRC lisp
  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioRaiseVolume")
    "exec sh -c \"pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +2%\"")

  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioLowerVolume")
    "exec sh -c \"pactl set-sink-mute 0 false ; pactl set-sink-volume 0 -2%\"")

  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioMute")
    "exec sh -c \"pactl set-sink-mute 0 true\"")
#+end_src
** Controlling MPD and opening Ncmpcpp
#+BEGIN_SRC lisp
  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioPlay") "exec mpc toggle")
  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioNext") "exec mpc next")
  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioPrev") "exec mpc prev")

  (stumpwm:define-key stumpwm:*top-map* (stumpwm:kbd "s-XF86AudioPlay") "exec alacritty -e ncmpcpp")
#+end_src
** Terminal emulator (Alacritty)
#+BEGIN_SRC lisp
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "c") "exec alacritty")
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "C-c") "exec alacritty")
#+end_src
** Web browser (Firefox)
#+BEGIN_SRC lisp
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "s-f") "exec firefox")
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "s-F") "exec firefox --private-window")
#+end_src
** Reload and restart
#+BEGIN_SRC lisp
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd ".") "loadrc")
  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "C-.") "reload")
#+end_src
* App menu
#+BEGIN_SRC lisp
  (stumpwm:load-module "app-menu")

  (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "s-.") "show-menu")

  (setq app-menu:*app-menu*
	'(("Internet"
	   ("Firefox" "exec firefox") ; Open Firefox
	   ("Firefox (Private)" "exec firefox --private-window") ; Open Firefox (Private)
	   ("Nyxt" "exec nyxt") ; Open Nyxt
	   )
	  ("Text Editors"
	   ("Emacs" stumpwm:emacs))))
#+end_src

* WM
** Automatic resizing (golden ratio)
#+BEGIN_SRC lisp
  (stumpwm:load-module "swm-golden-ratio")
  (swm-golden-ratio:toggle-golden-ratio)
#+end_src
* Mode-line
** The format of window names
#+BEGIN_SRC lisp
  (setq stumpwm:*window-format* "%m%n%s%30t")
#+end_src
** The elements of the mode-line
#+BEGIN_SRC lisp
  (stumpwm:load-module "battery-portable")
  (stumpwm:load-module "hostname")

  (setq stumpwm:*screen-mode-line-format* "[^B%n^b] %W ^B| %B - %d (%h)^b")
#+end_src
